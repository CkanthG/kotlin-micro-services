2024-09-11 10:15:12 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 92475 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:15:12 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:15:12 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:15:12 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:15:12 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:15:12 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@4cc7d00d uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:15:12 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:15:12 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:15:12 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25be445f uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:15:12 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:15:12 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:15:12 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5d1b1c2a uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:15:13 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:15:13 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 1 JPA repository interface.
2024-09-11 10:15:13 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:15:13 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:15:13 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:15:13 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:15:13 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:15:13 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:15:13 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:15:14 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:15:14 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1532 ms
2024-09-11 10:15:14 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:15:14 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:15:14 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:15:14 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:15:14 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:15:14 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5101b9
2024-09-11 10:15:14 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:15:15 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:15:15 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:15:15 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:15:16 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:15:16 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:15:16 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:15:16 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 53927 (http) with context path ''
2024-09-11 10:15:16 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.522 seconds (process running for 6.85)
2024-09-11 10:15:17 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:15:17 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:15:17 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:15:18 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:15:18 ERROR [http-nio-auto-1-exec-1] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.NoSuchElementException: No value present] with root cause
java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.get(Optional.java:143)
	at com.sree.claims.service.ClaimService.getClaim(ClaimService.kt:45)
	at com.sree.claims.controller.ClaimController.getClaims(ClaimController.kt:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
	at kotlin.reflect.jvm.internal.KCallableImpl.callDefaultMethod$kotlin_reflection(KCallableImpl.kt:207)
	at kotlin.reflect.jvm.internal.KCallableImpl.callBy(KCallableImpl.kt:112)
	at org.springframework.web.method.support.InvocableHandlerMethod$KotlinDelegate.invokeFunction(InvocableHandlerMethod.java:334)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:252)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-09-11 10:15:19 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:15:19 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:15:19 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:18:54 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 93020 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:18:54 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:18:54 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:18:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:18:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:18:54 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@4cc7d00d uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:18:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:18:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:18:54 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25be445f uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:18:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:18:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:18:54 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5d1b1c2a uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:18:55 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:18:55 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 132 ms. Found 1 JPA repository interface.
2024-09-11 10:18:55 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:18:55 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:18:55 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:18:55 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:18:55 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:18:55 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:18:55 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:18:55 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:18:55 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1272 ms
2024-09-11 10:18:55 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:18:56 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:18:56 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:18:56 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:18:56 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:18:56 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7da40bf4
2024-09-11 10:18:56 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:18:57 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:18:57 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:18:57 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:18:58 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:18:58 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:18:58 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:18:58 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54004 (http) with context path ''
2024-09-11 10:18:58 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 4.988 seconds (process running for 6.042)
2024-09-11 10:18:59 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:18:59 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:18:59 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:18:59 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:18:59 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:18:59 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:20:38 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 93305 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:20:38 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:20:38 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:20:38 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:20:38 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:20:38 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@4cc7d00d uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:20:38 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:20:38 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:20:38 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25be445f uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:20:38 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:20:38 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:20:38 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5d1b1c2a uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:20:39 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:20:39 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 1 JPA repository interface.
2024-09-11 10:20:39 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:20:39 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:20:39 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:20:39 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:20:39 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:20:39 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:20:39 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:20:39 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:20:39 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1296 ms
2024-09-11 10:20:40 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:20:40 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:20:40 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:20:40 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:20:40 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:20:40 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e0c03bd
2024-09-11 10:20:40 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:20:41 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:20:41 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:20:41 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:20:42 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:20:42 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:20:42 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:20:42 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54067 (http) with context path ''
2024-09-11 10:20:42 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.034 seconds (process running for 6.083)
2024-09-11 10:20:43 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:20:43 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:20:43 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:20:43 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:20:43 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:20:43 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:20:43 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response : com.sree.claims.entity.Claim@5054ae48
2024-09-11 10:20:45 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:20:45 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:20:45 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:21:35 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 93465 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:21:35 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:21:35 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:21:35 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:21:35 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:21:35 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@4cc7d00d uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:21:35 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:21:35 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:21:35 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25be445f uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:21:35 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:21:35 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:21:35 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5d1b1c2a uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:21:35 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:21:36 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 120 ms. Found 1 JPA repository interface.
2024-09-11 10:21:36 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:21:36 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:21:36 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:21:36 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:21:36 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:21:36 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:21:36 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:21:36 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:21:36 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1222 ms
2024-09-11 10:21:36 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:21:36 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:21:36 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:21:37 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:21:37 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:21:37 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5ec25b61
2024-09-11 10:21:37 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:21:38 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:21:38 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:21:38 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:21:38 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:21:38 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:21:39 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:21:39 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54105 (http) with context path ''
2024-09-11 10:21:39 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 4.875 seconds (process running for 5.882)
2024-09-11 10:21:40 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:21:40 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:21:40 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:21:40 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:21:40 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:21:40 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:21:40 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response : 2
2024-09-11 10:21:42 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:21:42 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:21:42 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:22:56 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 93678 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:22:56 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:22:56 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:22:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:22:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:22:56 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@4cc7d00d uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:22:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:22:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:22:56 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25be445f uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:22:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:22:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:22:56 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5d1b1c2a uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:22:56 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:22:57 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 1 JPA repository interface.
2024-09-11 10:22:57 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:22:57 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:22:57 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:22:57 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:22:57 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:22:57 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:22:57 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:22:57 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:22:57 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1352 ms
2024-09-11 10:22:57 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:22:57 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:22:57 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:22:58 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:22:58 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:22:58 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@74120029
2024-09-11 10:22:58 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:22:58 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:22:58 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:22:59 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:22:59 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:22:59 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:22:59 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:22:59 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54150 (http) with context path ''
2024-09-11 10:22:59 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 4.749 seconds (process running for 5.734)
2024-09-11 10:23:01 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:23:01 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:23:01 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:23:01 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:23:01 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:23:01 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:23:01 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response : com.sree.claims.entity.Claim@6c5e1f2b
2024-09-11 10:23:01 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:23:01 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:23:01 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:23:30 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 93775 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:23:30 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:23:30 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:23:31 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:23:31 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:23:31 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@4cc7d00d uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:23:31 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:23:31 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:23:31 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25be445f uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:23:31 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:23:31 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:23:31 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5d1b1c2a uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:23:31 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:23:31 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 1 JPA repository interface.
2024-09-11 10:23:32 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:23:32 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:23:32 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:23:32 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:23:32 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:23:32 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:23:32 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:23:32 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:23:32 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1503 ms
2024-09-11 10:23:32 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:23:32 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:23:32 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:23:33 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:23:33 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:23:33 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5ec25b61
2024-09-11 10:23:33 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:23:34 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:23:34 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:23:34 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:23:34 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:23:34 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:23:35 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:23:35 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54182 (http) with context path ''
2024-09-11 10:23:35 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.178 seconds (process running for 6.305)
2024-09-11 10:23:36 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:23:36 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:23:36 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:23:36 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:23:36 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:23:36 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:23:36 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response : 102
2024-09-11 10:23:38 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:23:38 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:23:38 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:26:16 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 94192 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:26:16 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:26:16 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:26:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:26:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:26:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25f61c2c uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:26:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:26:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:26:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@47acd13b uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:26:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:26:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:26:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@6f8e9d06 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:26:17 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:26:17 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 139 ms. Found 1 JPA repository interface.
2024-09-11 10:26:18 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:26:18 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:26:18 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:26:18 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:26:18 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:26:18 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:26:18 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:26:18 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:26:18 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1411 ms
2024-09-11 10:26:18 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:26:18 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:26:18 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:26:19 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:26:19 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:26:19 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@21f421b8
2024-09-11 10:26:19 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:26:20 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:26:20 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:26:20 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:26:20 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:26:20 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:26:20 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:26:20 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54258 (http) with context path ''
2024-09-11 10:26:21 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.276 seconds (process running for 6.648)
2024-09-11 10:26:22 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:26:22 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:26:22 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:26:22 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:26:22 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@4cae0691 by ID : 2
2024-09-11 10:26:24 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:26:24 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:26:24 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:26:59 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 94304 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:26:59 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:26:59 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:26:59 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:26:59 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:26:59 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25f61c2c uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:26:59 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:26:59 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:26:59 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@47acd13b uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:26:59 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:26:59 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:26:59 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@6f8e9d06 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:27:00 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:27:00 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 1 JPA repository interface.
2024-09-11 10:27:00 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:27:00 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:27:00 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:27:01 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:27:01 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:27:01 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:27:01 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:27:01 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:27:01 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1483 ms
2024-09-11 10:27:01 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:27:01 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:27:01 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:27:01 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:27:01 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:27:01 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@21f421b8
2024-09-11 10:27:02 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:27:02 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:27:02 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:27:03 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:27:03 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:27:03 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:27:04 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:27:04 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54296 (http) with context path ''
2024-09-11 10:27:04 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.567 seconds (process running for 6.725)
2024-09-11 10:27:05 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:27:05 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:27:05 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:27:05 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:27:05 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@9776f40 by ID : 2
2024-09-11 10:27:05 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:27:05 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:27:05 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:27:20 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 94380 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:27:20 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:27:20 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:27:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:27:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:27:20 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25f61c2c uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:27:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:27:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:27:20 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@47acd13b uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:27:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:27:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:27:20 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@6f8e9d06 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:27:21 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:27:21 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115 ms. Found 1 JPA repository interface.
2024-09-11 10:27:21 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:27:21 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:27:21 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:27:21 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:27:21 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:27:21 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:27:21 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:27:21 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:27:21 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1331 ms
2024-09-11 10:27:22 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:27:22 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:27:22 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:27:22 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:27:22 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:27:22 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77430c79
2024-09-11 10:27:22 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:27:23 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:27:23 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:27:23 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:27:23 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:27:24 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:27:24 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:27:24 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54325 (http) with context path ''
2024-09-11 10:27:24 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 4.648 seconds (process running for 5.655)
2024-09-11 10:27:25 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:27:25 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:27:25 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-09-11 10:27:25 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:27:25 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@5a7b0e50 by ID : 2
2024-09-11 10:27:25 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:27:25 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:27:25 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:27:25 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:27:25 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:27:25 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:27:25 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:27:25 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:27:30 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 94427 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:27:30 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:27:30 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:27:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:27:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:27:30 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@25f61c2c uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:27:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:27:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:27:30 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@47acd13b uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:27:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:27:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:27:30 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@6f8e9d06 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:27:31 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:27:31 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 118 ms. Found 1 JPA repository interface.
2024-09-11 10:27:31 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:27:31 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:27:31 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:27:31 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:27:31 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:27:31 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:27:31 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:27:32 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:27:32 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1207 ms
2024-09-11 10:27:32 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:27:32 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:27:32 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:27:32 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:27:32 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:27:32 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@21f421b8
2024-09-11 10:27:32 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:27:33 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:27:33 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:27:33 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:27:33 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:27:33 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:27:34 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:27:34 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54346 (http) with context path ''
2024-09-11 10:27:34 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 4.303 seconds (process running for 5.328)
2024-09-11 10:27:35 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:27:35 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:27:35 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:27:35 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:27:35 ERROR [http-nio-auto-1-exec-1] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.NoSuchElementException: No value present] with root cause
java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.get(Optional.java:143)
	at com.sree.claims.service.ClaimService.getClaim(ClaimService.kt:45)
	at com.sree.claims.controller.ClaimController.getClaims(ClaimController.kt:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
	at kotlin.reflect.jvm.internal.KCallableImpl.callDefaultMethod$kotlin_reflection(KCallableImpl.kt:207)
	at kotlin.reflect.jvm.internal.KCallableImpl.callBy(KCallableImpl.kt:112)
	at org.springframework.web.method.support.InvocableHandlerMethod$KotlinDelegate.invokeFunction(InvocableHandlerMethod.java:334)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:252)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-09-11 10:27:35 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:27:35 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:27:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:27:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:30:09 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 96511 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:30:09 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:30:09 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:30:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:30:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:30:09 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@2d2b6960 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:30:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:30:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:30:09 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@2272cbb0 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:30:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:30:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:30:09 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3f6f3cc uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:30:10 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:30:10 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 138 ms. Found 1 JPA repository interface.
2024-09-11 10:30:10 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:30:10 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:30:10 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:30:10 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:30:10 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:30:10 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:30:10 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:30:10 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:30:10 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1330 ms
2024-09-11 10:30:11 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:30:11 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:30:11 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:30:11 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:30:11 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:30:11 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c989d82
2024-09-11 10:30:11 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:30:12 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:30:12 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:30:12 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:30:13 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:30:13 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:30:13 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:30:13 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54403 (http) with context path ''
2024-09-11 10:30:13 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.035 seconds (process running for 6.156)
2024-09-11 10:30:14 DEBUG [Test worker] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:30:14 DEBUG [Test worker] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:30:14 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:30:14 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:30:14 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:30:14 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:30:14 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@16cdb806 by ID : 152
2024-09-11 10:30:15 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:30:15 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:30:15 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:30:15 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:30:15 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:32:11 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 96819 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:32:11 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:32:11 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:32:11 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:32:11 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:32:11 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@716185fe uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:32:11 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:32:11 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:32:11 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@36790bec uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:32:11 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:32:11 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:32:11 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@461c3709 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:32:12 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:32:12 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 139 ms. Found 1 JPA repository interface.
2024-09-11 10:32:12 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:32:12 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:32:12 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:32:12 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:32:12 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:32:12 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:32:12 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:32:13 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:32:13 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1485 ms
2024-09-11 10:32:13 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:32:13 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:32:13 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:32:13 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:32:13 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:32:13 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@61c42e54
2024-09-11 10:32:13 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:32:14 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:32:14 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:32:14 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:32:15 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:32:15 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:32:15 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:32:15 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54460 (http) with context path ''
2024-09-11 10:32:15 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.513 seconds (process running for 6.932)
2024-09-11 10:32:17 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:32:17 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:32:17 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:32:17 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:32:17 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:32:17 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:32:17 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 202
2024-09-11 10:32:17 DEBUG [Test worker] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:32:17 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:32:17 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@1df70a8e by ID : 203
2024-09-11 10:32:19 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:32:19 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:32:19 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:33:48 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 97069 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:33:48 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:33:48 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:33:48 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:33:48 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:33:48 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@628b819d uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:33:48 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:33:48 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:33:48 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@461c3709 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:33:48 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:33:48 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:33:48 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@7e3d7dd uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:33:49 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:33:49 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 136 ms. Found 1 JPA repository interface.
2024-09-11 10:33:49 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:33:49 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:33:49 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:33:50 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:33:50 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:33:50 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:33:50 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:33:50 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:33:50 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1391 ms
2024-09-11 10:33:50 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:33:50 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:33:50 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:33:50 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:33:50 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:33:50 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@af04d6d
2024-09-11 10:33:50 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:33:51 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:33:51 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:33:52 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:33:52 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:33:52 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:33:52 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:33:52 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54514 (http) with context path ''
2024-09-11 10:33:52 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.271 seconds (process running for 6.551)
2024-09-11 10:33:54 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:33:54 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:33:54 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:36:56 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 97578 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:36:56 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:36:56 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:36:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:36:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:36:56 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@17e0933c uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:36:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:36:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:36:56 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@38291795 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:36:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:36:56 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:36:56 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@234c5e41 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:36:57 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:36:57 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 143 ms. Found 1 JPA repository interface.
2024-09-11 10:36:57 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:36:57 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:36:57 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:36:58 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:36:58 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:36:58 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:36:58 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:36:58 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:36:58 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1431 ms
2024-09-11 10:36:58 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:36:58 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:36:58 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:36:58 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:36:58 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:36:58 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@40304938
2024-09-11 10:36:58 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:36:59 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:36:59 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:37:00 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:37:00 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:37:00 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:37:01 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:37:01 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54589 (http) with context path ''
2024-09-11 10:37:01 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.774 seconds (process running for 7.119)
2024-09-11 10:37:02 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:37:02 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:37:02 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:37:02 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:37:02 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:37:02 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:37:02 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 252
2024-09-11 10:37:02 DEBUG [Test worker] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:37:02 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:37:02 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@797ce5fd by ID : 253
2024-09-11 10:37:02 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:37:02 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:37:02 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:43:20 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 98502 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:43:20 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:43:20 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:43:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:43:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:43:20 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@628b819d uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:43:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:43:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:43:20 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@461c3709 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:43:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:43:20 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:43:20 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@7e3d7dd uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:43:21 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:43:21 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 144 ms. Found 1 JPA repository interface.
2024-09-11 10:43:21 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:43:21 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:43:21 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:43:22 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:43:22 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:43:22 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:43:22 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:43:22 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:43:22 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1511 ms
2024-09-11 10:43:22 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:43:22 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:43:22 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:43:22 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:43:22 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:43:23 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@af04d6d
2024-09-11 10:43:23 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:43:23 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:43:23 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:43:24 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:43:24 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:43:24 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:43:25 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:43:25 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54715 (http) with context path ''
2024-09-11 10:43:25 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.573 seconds (process running for 6.904)
2024-09-11 10:43:26 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:43:26 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:43:26 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:43:26 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:43:44 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:43:44 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:43:46 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 302
2024-09-11 10:43:47 DEBUG [Test worker] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:43:47 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:43:47 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@6eb5dee9 by ID : 303
2024-09-11 10:43:47 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:43:47 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:43:47 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:45:27 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 98825 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:45:27 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:45:27 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:45:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:45:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:45:28 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@47248a48 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:45:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:45:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:45:28 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@77429040 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:45:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:45:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:45:28 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@2d2b6960 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:45:28 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:45:29 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 1 JPA repository interface.
2024-09-11 10:45:29 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:45:29 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:45:29 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:45:30 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:45:30 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:45:30 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:45:30 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:45:30 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:45:30 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2093 ms
2024-09-11 10:45:30 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:45:30 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:45:30 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:45:30 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:45:30 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:45:31 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@75708130
2024-09-11 10:45:31 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:45:31 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:45:31 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:45:32 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:45:32 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:45:33 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:45:33 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:45:33 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54772 (http) with context path ''
2024-09-11 10:45:33 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 6.577 seconds (process running for 7.87)
2024-09-11 10:45:34 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:45:34 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:45:34 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-09-11 10:45:34 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:45:34 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:45:34 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:45:34 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 352
2024-09-11 10:45:34 DEBUG [Test worker] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:45:34 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:45:34 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@5bd79cfe by ID : 353
2024-09-11 10:45:35 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:45:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:45:35 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:46:07 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 98930 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:46:07 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:46:07 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:46:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:46:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:46:07 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@47248a48 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:46:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:46:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:46:07 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@77429040 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:46:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:46:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:46:07 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@2d2b6960 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:46:08 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:46:08 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 137 ms. Found 1 JPA repository interface.
2024-09-11 10:46:08 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:46:08 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:46:08 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:46:08 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:46:08 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:46:08 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:46:08 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:46:08 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:46:08 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1222 ms
2024-09-11 10:46:08 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:46:09 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:46:09 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:46:09 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:46:09 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:46:09 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3031d9e9
2024-09-11 10:46:09 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:46:10 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:46:10 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:46:10 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:46:11 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:46:11 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:46:12 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:46:12 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54811 (http) with context path ''
2024-09-11 10:46:12 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.769 seconds (process running for 6.942)
2024-09-11 10:46:13 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:46:13 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:46:13 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-09-11 10:46:13 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:46:13 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:46:13 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:46:13 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 402
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:13 DEBUG [Test worker] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:46:14 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:46:14 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@319c32c5 by ID : 403
2024-09-11 10:46:14 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:46:14 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:46:15 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:46:15 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:46:15 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:48:28 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 99285 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:48:28 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:48:28 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:48:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:48:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:48:28 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@47248a48 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:48:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:48:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:48:28 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@77429040 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:48:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:48:28 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:48:28 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@2d2b6960 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:48:28 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:48:29 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 1 JPA repository interface.
2024-09-11 10:48:29 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:48:29 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:48:29 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:48:29 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:48:29 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:48:29 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:48:29 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:48:29 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:48:29 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1435 ms
2024-09-11 10:48:29 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:48:30 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:48:30 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:48:30 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:48:30 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:48:30 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c651286
2024-09-11 10:48:30 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:48:31 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:48:31 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:48:31 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:48:32 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:48:32 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:48:32 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:48:32 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54900 (http) with context path ''
2024-09-11 10:48:32 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.275 seconds (process running for 6.346)
2024-09-11 10:48:34 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:48:34 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:48:34 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:48:34 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:48:34 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:48:34 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:48:34 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 452
2024-09-11 10:48:34 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:48:34 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:48:34 DEBUG [Test worker] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:48:34 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:48:34 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@18b0b855 by ID : 453
2024-09-11 10:48:34 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:48:34 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:48:34 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:48:34 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:48:34 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:49:08 INFO  [Test worker] c.s.c.ClaimServiceApplicationTests - Starting ClaimServiceApplicationTests using Java 17.0.4 with PID 99387 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:49:08 DEBUG [Test worker] c.s.c.ClaimServiceApplicationTests - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:49:08 INFO  [Test worker] c.s.c.ClaimServiceApplicationTests - The following 1 profile is active: "test"
2024-09-11 10:49:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:49:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:49:09 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@86b0a6f uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:49:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:49:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:49:09 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@e8546ed uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:49:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:49:09 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:49:09 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@b5e14d2 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:49:10 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:49:10 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 245 ms. Found 1 JPA repository interface.
2024-09-11 10:49:11 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=a6c39c73-0e87-325d-a90f-a5928bdb6c63
2024-09-11 10:49:11 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:49:11 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:49:11 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:49:11 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:49:11 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:49:12 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:49:12 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:49:12 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@396f13c3
2024-09-11 10:49:12 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:49:14 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:49:14 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:49:15 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:49:16 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:49:16 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:49:16 INFO  [Test worker] c.s.c.ClaimServiceApplicationTests - Started ClaimServiceApplicationTests in 10.343 seconds (process running for 12.278)
2024-09-11 10:49:17 INFO  [Test worker] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.sree.claims.controller.ClaimControllerIT]: ClaimControllerIT does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-09-11 10:49:17 INFO  [Test worker] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.sree.claims.ClaimServiceApplication for test class com.sree.claims.controller.ClaimControllerIT
2024-09-11 10:49:17 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 99387 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:49:17 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:49:17 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:49:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:49:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:49:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@2ba3df1a uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:49:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:49:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:49:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@4c8296a6 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:49:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:49:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:49:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@b8596f4 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:49:17 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:49:17 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 1 JPA repository interface.
2024-09-11 10:49:17 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:49:17 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:49:17 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:49:17 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:49:17 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:49:17 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:49:17 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:49:17 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:49:17 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 623 ms
2024-09-11 10:49:17 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:49:17 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:49:17 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:49:17 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2024-09-11 10:49:17 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@ae08b9a
2024-09-11 10:49:17 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2024-09-11 10:49:17 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:49:17 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:49:18 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:49:18 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:49:18 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:49:18 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:49:18 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54948 (http) with context path ''
2024-09-11 10:49:18 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 1.563 seconds (process running for 14.57)
2024-09-11 10:49:19 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:49:19 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:49:19 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:49:20 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:49:20 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:49:20 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:49:20 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 502
2024-09-11 10:49:20 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:49:20 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:49:20 DEBUG [Test worker] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:49:20 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 10:49:20 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@44574f02 by ID : 503
2024-09-11 10:49:20 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:49:20 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:49:20 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:49:20 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:49:20 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 10:49:20 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:49:20 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2024-09-11 10:49:20 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2024-09-11 10:59:18 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 1265 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 10:59:18 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 10:59:18 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 10:59:18 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:59:18 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:59:18 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@7e15f4d4 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:59:18 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:59:18 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 10:59:18 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5eabff6b uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 10:59:18 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 10:59:18 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 10:59:18 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5b000fe6 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 10:59:19 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 10:59:19 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 125 ms. Found 1 JPA repository interface.
2024-09-11 10:59:19 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 10:59:19 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 10:59:19 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 10:59:20 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 10:59:20 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:59:20 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 10:59:20 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 10:59:20 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 10:59:20 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1294 ms
2024-09-11 10:59:20 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 10:59:20 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 10:59:20 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 10:59:20 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 10:59:20 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 10:59:20 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1503f434
2024-09-11 10:59:20 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 10:59:21 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 10:59:21 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:59:22 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 10:59:22 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 10:59:22 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 10:59:23 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 10:59:23 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 55168 (http) with context path ''
2024-09-11 10:59:23 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 5.437 seconds (process running for 6.572)
2024-09-11 10:59:23 INFO  [Test worker] o.t.utility.ImageNameSubstitutor - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-09-11 10:59:23 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 10:59:24 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 10:59:24 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 10:59:24 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 10:59:24 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Pulling docker image: testcontainers/ryuk:0.5.1. Please be patient; this may take some time but only needs to be done once.
2024-09-11 10:59:26 INFO  [docker-java-stream--1056365877] tc.testcontainers/ryuk:0.5.1 - Starting to pull image
2024-09-11 10:59:26 INFO  [docker-java-stream--1056365877] tc.testcontainers/ryuk:0.5.1 - Pulling image layers:  0 pending,  0 downloaded,  0 extracted, (0 bytes/0 bytes)
2024-09-11 10:59:27 INFO  [docker-java-stream--1056365877] tc.testcontainers/ryuk:0.5.1 - Pulling image layers:  2 pending,  1 downloaded,  0 extracted, (0 bytes/? MB)
2024-09-11 10:59:27 INFO  [docker-java-stream--1056365877] tc.testcontainers/ryuk:0.5.1 - Pulling image layers:  1 pending,  2 downloaded,  0 extracted, (2 MB/? MB)
2024-09-11 10:59:27 INFO  [docker-java-stream--1056365877] tc.testcontainers/ryuk:0.5.1 - Pulling image layers:  0 pending,  3 downloaded,  0 extracted, (3 MB/5 MB)
2024-09-11 10:59:28 INFO  [docker-java-stream--1056365877] tc.testcontainers/ryuk:0.5.1 - Pull complete. 3 layers, pulled in 2s (downloaded 3 MB at 1 MB/s)
2024-09-11 10:59:29 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 10:59:29 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: 125c1f2b4f13f65dbf7ec032805f978541d107bdf9d6d1bdc6b1b3e2874e9ece
2024-09-11 10:59:31 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT6.914151S
2024-09-11 10:59:31 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 10:59:31 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 10:59:31 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 10:59:31 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 10:59:31 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: b77277bfeb7a42a04ac340194e7b6571e4cc12fac195bae241153d63d10c8873
2024-09-11 10:59:35 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT4.191628S
2024-09-11 10:59:35 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:55184/test?loggerLevel=OFF)
2024-09-11 10:59:36 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 10:59:36 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 10:59:36 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 10:59:36 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 10:59:36 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 10:59:36 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 10:59:36 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 552
2024-09-11 10:59:36 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 10:59:36 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 10:59:36 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 10:59:36 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 10:59:36 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:00:41 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 1495 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:00:41 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:00:41 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:00:41 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:00:41 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:00:41 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@7e15f4d4 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:00:41 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:00:41 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:00:41 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5eabff6b uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:00:41 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:00:41 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:00:41 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5b000fe6 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:00:42 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:00:42 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 190 ms. Found 1 JPA repository interface.
2024-09-11 11:00:42 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:00:42 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:00:42 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:00:43 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:00:43 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:00:43 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:00:43 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:00:43 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:00:43 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2081 ms
2024-09-11 11:00:43 WARN  [Test worker] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'dataSourceScriptDatabaseInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
2024-09-11 11:00:43 INFO  [Test worker] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-09-11 11:00:43 INFO  [Test worker] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-09-11 11:00:43 ERROR [Test worker] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (the profiles test are currently active).

2024-09-11 11:00:43 WARN  [Test worker] o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sree.claims.controller.ClaimControllerIT@7e017f47]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@370a935f testClass = com.sree.claims.controller.ClaimControllerIT, locations = [], classes = [com.sree.claims.ClaimServiceApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@555cf22, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4c5474f5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6b98a075, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@18b0930f, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2e9fda69, org.springframework.boot.test.context.SpringBootTestAnnotation@c780de80], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'dataSourceScriptDatabaseInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 87 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	... 103 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 113 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 127 common frames omitted
Caused by: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:186)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 128 common frames omitted
2024-09-11 11:01:46 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 1655 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:01:46 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:01:46 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:01:46 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:01:46 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:01:46 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@7e15f4d4 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:01:46 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:01:46 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:01:46 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5eabff6b uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:01:46 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:01:46 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:01:46 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@5b000fe6 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:01:47 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:01:47 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 107 ms. Found 1 JPA repository interface.
2024-09-11 11:01:47 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:01:47 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:01:47 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:01:48 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:01:48 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:01:48 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:01:48 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:01:48 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:01:48 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1320 ms
2024-09-11 11:01:48 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:01:48 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:01:48 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:01:48 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:01:48 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:01:49 ERROR [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: FATAL: database "testing" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2825)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:175)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:313)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-09-11 11:01:49 WARN  [Test worker] o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-09-11 11:01:49 ERROR [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2024-09-11 11:01:49 WARN  [Test worker] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2024-09-11 11:01:49 INFO  [Test worker] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-09-11 11:01:49 INFO  [Test worker] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-09-11 11:01:49 ERROR [Test worker] o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 108 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:143)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:348)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 123 common frames omitted
2024-09-11 11:01:49 WARN  [Test worker] o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sree.claims.controller.ClaimControllerIT@7e9ea888]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@125c03d3 testClass = com.sree.claims.controller.ClaimControllerIT, locations = [], classes = [com.sree.claims.ClaimServiceApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@555cf22, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4c5474f5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6b98a075, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@18b0930f, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2e9fda69, org.springframework.boot.test.context.SpringBootTestAnnotation@c780de80], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 87 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 108 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:143)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:348)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 123 common frames omitted
2024-09-11 11:06:08 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 2337 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:06:08 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:06:08 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:06:08 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:06:08 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:06:08 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@799f916e uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:06:08 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:06:08 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:06:08 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3f1a9a53 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:06:08 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:06:08 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:06:08 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1ca3d25b uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:06:09 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:06:09 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 136 ms. Found 1 JPA repository interface.
2024-09-11 11:06:09 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:06:09 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:06:09 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:06:10 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:06:10 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:06:10 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:06:10 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:06:10 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:06:10 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1334 ms
2024-09-11 11:06:10 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:06:10 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:06:10 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:06:10 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:06:10 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:06:11 ERROR [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: FATAL: database "testing" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2825)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:175)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:313)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-09-11 11:06:11 WARN  [Test worker] o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-09-11 11:06:11 ERROR [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2024-09-11 11:06:11 WARN  [Test worker] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2024-09-11 11:06:11 INFO  [Test worker] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-09-11 11:06:11 INFO  [Test worker] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-09-11 11:06:12 ERROR [Test worker] o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 108 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:143)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:348)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 123 common frames omitted
2024-09-11 11:06:12 WARN  [Test worker] o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sree.claims.controller.ClaimControllerIT@4628f386]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@78ca8258 testClass = com.sree.claims.controller.ClaimControllerIT, locations = [], classes = [com.sree.claims.ClaimServiceApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@319bc845, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@544820b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@e84a8e1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@256f8274, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2371aaca, org.springframework.boot.test.context.SpringBootTestAnnotation@446b0106], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 87 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 108 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:143)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:348)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 123 common frames omitted
2024-09-11 11:13:45 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 3452 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:13:45 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:13:45 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:13:45 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:13:45 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:13:45 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@da4cf09 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:13:45 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:13:45 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:13:45 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:13:45 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:13:45 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:13:45 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:13:46 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:13:46 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:13:46 WARN  [Test worker] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.sree.claims.ClaimServiceApplication]: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
2024-09-11 11:13:46 INFO  [Test worker] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-09-11 11:13:46 ERROR [Test worker] o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.sree.claims.ClaimServiceApplication]: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:544)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.lambda$processGroupImports$1(ConfigurationClassParser.java:746)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.processGroupImports(ConfigurationClassParser.java:743)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler.process(ConfigurationClassParser.java:714)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:183)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:417)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:290)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:607)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:220)
	at org.springframework.context.annotation.ConfigurationClassParser.processMemberClasses(ConfigurationClassParser.java:382)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:273)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:246)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:534)
	... 111 common frames omitted
Caused by: java.lang.IllegalStateException: Mapped port can only be obtained after the container is started
	at org.testcontainers.shaded.com.google.common.base.Preconditions.checkState(Preconditions.java:174)
	at org.testcontainers.containers.ContainerState.getMappedPort(ContainerState.java:161)
	at org.testcontainers.containers.PostgreSQLContainer.getJdbcUrl(PostgreSQLContainer.java:100)
	at org.springframework.util.function.SupplierUtils.resolve(SupplierUtils.java:52)
	at org.springframework.test.context.support.DynamicValuesPropertySource.getProperty(DynamicValuesPropertySource.java:44)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:125)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.findPropertyValue(ConfigurationPropertySourcesPropertyResolver.java:99)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:75)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:61)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition.hasDataSourceUrlProperty(DataSourceAutoConfiguration.java:157)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition.getMatchOutcome(DataSourceAutoConfiguration.java:140)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 117 common frames omitted
2024-09-11 11:13:46 WARN  [Test worker] o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sree.claims.controller.ClaimControllerIT@6159fb3c]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@6fefc5ea testClass = com.sree.claims.controller.ClaimControllerIT, locations = [], classes = [com.sree.claims.ClaimServiceApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@5e8ac0e1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5f7b97da, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@256f8274, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1af687fe, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@435fb7b5, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@ffb79a95, org.springframework.boot.test.context.SpringBootTestAnnotation@6e2760f6], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.sree.claims.ClaimServiceApplication]: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:544)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.lambda$processGroupImports$1(ConfigurationClassParser.java:746)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.processGroupImports(ConfigurationClassParser.java:743)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler.process(ConfigurationClassParser.java:714)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:183)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:417)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:290)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:607)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 87 common frames omitted
Caused by: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:220)
	at org.springframework.context.annotation.ConfigurationClassParser.processMemberClasses(ConfigurationClassParser.java:382)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:273)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:246)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:534)
	... 111 common frames omitted
Caused by: java.lang.IllegalStateException: Mapped port can only be obtained after the container is started
	at org.testcontainers.shaded.com.google.common.base.Preconditions.checkState(Preconditions.java:174)
	at org.testcontainers.containers.ContainerState.getMappedPort(ContainerState.java:161)
	at org.testcontainers.containers.PostgreSQLContainer.getJdbcUrl(PostgreSQLContainer.java:100)
	at org.springframework.util.function.SupplierUtils.resolve(SupplierUtils.java:52)
	at org.springframework.test.context.support.DynamicValuesPropertySource.getProperty(DynamicValuesPropertySource.java:44)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:125)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.findPropertyValue(ConfigurationPropertySourcesPropertyResolver.java:99)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:75)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:61)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition.hasDataSourceUrlProperty(DataSourceAutoConfiguration.java:157)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition.getMatchOutcome(DataSourceAutoConfiguration.java:140)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 117 common frames omitted
2024-09-11 11:16:36 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 3873 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:16:36 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:16:36 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:16:37 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:16:37 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:16:37 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@da4cf09 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:16:37 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:16:37 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:16:37 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:16:37 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:16:37 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:16:37 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:16:37 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:16:37 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:16:37 WARN  [Test worker] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.sree.claims.ClaimServiceApplication]: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
2024-09-11 11:16:37 INFO  [Test worker] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-09-11 11:16:38 ERROR [Test worker] o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.sree.claims.ClaimServiceApplication]: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:544)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.lambda$processGroupImports$1(ConfigurationClassParser.java:746)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.processGroupImports(ConfigurationClassParser.java:743)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler.process(ConfigurationClassParser.java:714)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:183)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:417)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:290)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:607)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:220)
	at org.springframework.context.annotation.ConfigurationClassParser.processMemberClasses(ConfigurationClassParser.java:382)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:273)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:246)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:534)
	... 111 common frames omitted
Caused by: java.lang.IllegalStateException: Mapped port can only be obtained after the container is started
	at org.testcontainers.shaded.com.google.common.base.Preconditions.checkState(Preconditions.java:174)
	at org.testcontainers.containers.ContainerState.getMappedPort(ContainerState.java:161)
	at org.testcontainers.containers.PostgreSQLContainer.getJdbcUrl(PostgreSQLContainer.java:100)
	at org.springframework.util.function.SupplierUtils.resolve(SupplierUtils.java:52)
	at org.springframework.test.context.support.DynamicValuesPropertySource.getProperty(DynamicValuesPropertySource.java:44)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:125)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.findPropertyValue(ConfigurationPropertySourcesPropertyResolver.java:99)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:75)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:61)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition.hasDataSourceUrlProperty(DataSourceAutoConfiguration.java:157)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition.getMatchOutcome(DataSourceAutoConfiguration.java:140)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 117 common frames omitted
2024-09-11 11:16:38 WARN  [Test worker] o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sree.claims.controller.ClaimControllerIT@4544ab46]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@5d8fd077 testClass = com.sree.claims.controller.ClaimControllerIT, locations = [], classes = [com.sree.claims.ClaimServiceApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@5e8ac0e1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5f7b97da, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@256f8274, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1af687fe, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@435fb7b5, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@ffb79a95, org.springframework.boot.test.context.SpringBootTestAnnotation@6e2760f6], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.sree.claims.ClaimServiceApplication]: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:544)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.lambda$processGroupImports$1(ConfigurationClassParser.java:746)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.processGroupImports(ConfigurationClassParser.java:743)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler.process(ConfigurationClassParser.java:714)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:183)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:417)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:290)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:607)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 87 common frames omitted
Caused by: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:220)
	at org.springframework.context.annotation.ConfigurationClassParser.processMemberClasses(ConfigurationClassParser.java:382)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:273)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:246)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:534)
	... 111 common frames omitted
Caused by: java.lang.IllegalStateException: Mapped port can only be obtained after the container is started
	at org.testcontainers.shaded.com.google.common.base.Preconditions.checkState(Preconditions.java:174)
	at org.testcontainers.containers.ContainerState.getMappedPort(ContainerState.java:161)
	at org.testcontainers.containers.PostgreSQLContainer.getJdbcUrl(PostgreSQLContainer.java:100)
	at org.springframework.util.function.SupplierUtils.resolve(SupplierUtils.java:52)
	at org.springframework.test.context.support.DynamicValuesPropertySource.getProperty(DynamicValuesPropertySource.java:44)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:125)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.findPropertyValue(ConfigurationPropertySourcesPropertyResolver.java:99)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:75)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:61)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition.hasDataSourceUrlProperty(DataSourceAutoConfiguration.java:157)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition.getMatchOutcome(DataSourceAutoConfiguration.java:140)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 117 common frames omitted
2024-09-11 11:17:28 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:17:30 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:17:30 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:17:30 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:17:30 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:17:32 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: 20045b03104bac13860ee451360be05ddb2242a7e9dad254514c64801cb8eade
2024-09-11 11:17:33 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT3.422354S
2024-09-11 11:17:33 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:17:33 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:17:33 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:17:33 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:17:34 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 35d9a584fb4f34fffb63e71001a0fa9ca6711beace05f533be1616fba0b3bb1a
2024-09-11 11:17:36 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT2.361209S
2024-09-11 11:17:36 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:55623/testdb?loggerLevel=OFF)
2024-09-11 11:17:40 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 3973 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:17:40 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:17:40 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:17:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:17:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:17:40 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@da4cf09 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:17:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:17:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:17:40 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:17:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:17:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:17:40 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:17:41 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:17:41 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 224 ms. Found 1 JPA repository interface.
2024-09-11 11:17:41 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:17:41 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:17:41 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:17:42 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:17:42 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:17:42 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:17:42 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:17:42 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:17:42 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2109 ms
2024-09-11 11:17:42 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:17:42 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:17:42 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:17:43 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:17:43 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:17:43 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46a5aff
2024-09-11 11:17:43 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:17:44 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:17:44 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint, claim_total_paid bigint, claim_total_requested bigint, market varchar(255), sub_market integer, primary key (claim_id))
2024-09-11 11:17:44 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:17:44 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:17:44 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:17:44 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:17:45 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:17:45 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:17:45 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 55637 (http) with context path ''
2024-09-11 11:17:45 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 29.276 seconds (process running for 30.711)
2024-09-11 11:17:46 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:17:46 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:17:46 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 11:17:46 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 11:17:46 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:17:46 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:17:46 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:17:47 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:17:47 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:17:48 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:17:48 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:17:48 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:19:13 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:19:13 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:19:13 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:19:13 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:19:13 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:19:14 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: b66710864ed5a346b28d06f4d57c848c4dee6e04af70a7c14fef881e4d525241
2024-09-11 11:19:14 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT1.033773S
2024-09-11 11:19:14 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:19:14 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:19:14 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:19:14 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:19:14 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 52904725b1a6d757ffcbeabd6cdbed0c70e198a714fff7662d06704f4ce11af6
2024-09-11 11:19:16 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT1.901612S
2024-09-11 11:19:16 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:55678/testdb?loggerLevel=OFF)
2024-09-11 11:19:16 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 4298 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:19:16 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:19:16 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:19:16 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:19:16 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:19:16 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3e214105 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:19:16 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:19:16 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:19:16 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@b5c6a30 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:19:16 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:19:16 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:19:16 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:19:17 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:19:17 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 146 ms. Found 1 JPA repository interface.
2024-09-11 11:19:18 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:19:18 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:19:18 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:19:18 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:19:18 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:19:18 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:19:18 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:19:18 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:19:18 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1566 ms
2024-09-11 11:19:18 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:19:18 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:19:18 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:19:18 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:19:18 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:19:19 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76fa3dd8
2024-09-11 11:19:19 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:19:19 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:19:20 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint, claim_total_paid bigint, claim_total_requested bigint, market varchar(255), sub_market integer, primary key (claim_id))
2024-09-11 11:19:20 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:19:20 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:19:20 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:19:20 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:19:20 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:19:21 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:19:21 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 55691 (http) with context path ''
2024-09-11 11:19:21 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 9.231 seconds (process running for 10.425)
2024-09-11 11:19:22 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:19:22 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:19:22 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 11:19:22 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 11:19:22 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:19:22 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:19:22 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:19:23 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:19:23 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:19:24 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:19:24 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:19:24 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:22:50 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:22:50 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:22:50 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:22:50 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:22:50 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:22:51 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: ca1aad7ad62905951cdf79e58900020f70f8a32389f6daf4ce87f202c4ab93a6
2024-09-11 11:22:51 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.83693S
2024-09-11 11:22:51 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:22:51 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:22:51 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:22:51 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:22:51 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: eabc52ffb45825762254d1d3850462736a045eec89821b54da90d15eda5e9ebe
2024-09-11 11:22:54 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT2.758116S
2024-09-11 11:22:54 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:55775/testdb?loggerLevel=OFF)
2024-09-11 11:22:54 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 4902 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:22:54 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:22:54 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:22:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:22:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:22:54 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@da4cf09 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:22:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:22:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:22:54 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:22:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:22:54 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:22:54 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:22:55 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:22:55 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 188 ms. Found 1 JPA repository interface.
2024-09-11 11:22:55 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:22:55 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:22:55 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:22:56 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:22:56 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:22:56 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:22:56 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:22:56 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:22:56 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1685 ms
2024-09-11 11:22:56 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:22:56 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:22:56 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:22:56 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:22:56 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:22:57 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7a8316fa
2024-09-11 11:22:57 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:22:57 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:22:57 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint, claim_total_paid bigint, claim_total_requested bigint, market varchar(255), sub_market integer, primary key (claim_id))
2024-09-11 11:22:57 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:22:57 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:22:58 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:22:58 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:22:59 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:22:59 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:22:59 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 55789 (http) with context path ''
2024-09-11 11:22:59 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 9.808 seconds (process running for 10.982)
2024-09-11 11:23:00 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:23:00 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:23:00 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 11:23:00 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=null, claimName=null, market=null, subMarket=null, claimNumber=null, claimTotalRequested=null, claimTotalPaid=null, claimTotalInitial=null) to Save.
2024-09-11 11:23:00 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:23:00 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:23:00 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:23:01 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:23:01 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:23:02 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:23:02 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:23:02 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:29:16 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:29:16 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:29:16 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:29:16 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:29:17 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:29:17 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: f10730d5065e39ee8fd1694f33f546c38adfeabf01cc1384400aa31b07ef8192
2024-09-11 11:29:17 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.956252S
2024-09-11 11:29:17 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:29:17 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:29:17 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:29:17 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:29:18 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 42a0cf112de5316d59c3dcb07e047957f96703c2b0089c1d574c300aa28b1315
2024-09-11 11:29:19 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT1.721758S
2024-09-11 11:29:19 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:55936/testdb?loggerLevel=OFF)
2024-09-11 11:29:19 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 17380 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:29:19 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:29:19 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:29:19 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:29:19 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:29:19 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@da4cf09 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:29:19 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:29:19 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:29:19 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:29:19 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:29:19 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:29:19 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:29:20 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:29:20 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 162 ms. Found 1 JPA repository interface.
2024-09-11 11:29:20 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:29:20 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:29:20 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:29:21 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:29:21 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:29:21 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:29:21 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:29:21 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:29:21 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1401 ms
2024-09-11 11:29:21 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:29:21 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:29:21 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:29:21 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:29:21 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:29:21 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76fa3dd8
2024-09-11 11:29:21 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:29:22 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:29:22 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint not null, claim_total_paid bigint not null, claim_total_requested bigint not null, market varchar(255), sub_market integer not null, primary key (claim_id))
2024-09-11 11:29:22 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:29:22 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:29:23 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:29:23 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:29:23 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:29:23 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:29:23 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 55949 (http) with context path ''
2024-09-11 11:29:23 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 8.558 seconds (process running for 9.701)
2024-09-11 11:29:25 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:29:25 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:29:25 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 11:29:25 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=0, claimName=, market=, subMarket=0, claimNumber=, claimTotalRequested=0, claimTotalPaid=0, claimTotalInitial=0) to Save.
2024-09-11 11:29:25 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:29:25 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:29:25 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:29:25 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:29:25 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:29:27 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:29:27 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:29:27 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:30:24 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:30:24 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:30:24 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:30:24 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:30:24 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:30:24 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: f1b93ba95f3b8b5175c729acd644c5c0beed3212b681a39ebf0f1dcb28333a32
2024-09-11 11:30:25 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.890183S
2024-09-11 11:30:25 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:30:25 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:30:25 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:30:25 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:30:25 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 33c54d68c7cd5dda73d01ec8f982cf0808d03abefc76ae9e6928a8aa91e5be51
2024-09-11 11:30:27 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT2.05314S
2024-09-11 11:30:27 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:55988/testdb?loggerLevel=OFF)
2024-09-11 11:30:27 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 19067 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:30:27 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:30:27 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:30:27 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:30:27 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:30:27 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@da4cf09 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:30:27 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:30:27 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:30:27 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:30:27 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:30:27 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:30:27 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:30:28 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:30:28 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 131 ms. Found 1 JPA repository interface.
2024-09-11 11:30:28 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:30:28 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:30:28 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:30:29 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:30:29 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:30:29 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:30:29 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:30:29 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:30:29 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1743 ms
2024-09-11 11:30:29 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:30:29 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:30:29 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:30:30 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:30:30 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:30:30 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1dbe592f
2024-09-11 11:30:30 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:30:31 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:30:31 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint not null, claim_total_paid bigint not null, claim_total_requested bigint not null, market varchar(255), sub_market integer not null, primary key (claim_id))
2024-09-11 11:30:31 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:30:31 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:30:31 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:30:32 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:30:32 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:30:32 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:30:32 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 56001 (http) with context path ''
2024-09-11 11:30:32 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 9.591 seconds (process running for 10.694)
2024-09-11 11:30:33 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:30:33 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:30:33 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 11:30:34 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=0, claimName=, market=, subMarket=0, claimNumber=, claimTotalRequested=0, claimTotalPaid=0, claimTotalInitial=0) to Save.
2024-09-11 11:30:34 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:30:34 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:30:34 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:30:34 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:30:34 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:30:34 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:30:34 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:30:34 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:31:27 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:31:27 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:31:27 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:31:27 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:31:27 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:31:27 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: 73e5d2d92252a8a81d00a2749dd571f79e107ca77d676299286c013d034ae71d
2024-09-11 11:31:28 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.812076S
2024-09-11 11:31:28 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:31:28 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:31:28 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:31:28 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:31:28 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 19a75f7851bac1d24b335258da901240fd761fd5c4e9360a95a1e38a09a6a48c
2024-09-11 11:31:29 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT1.639464S
2024-09-11 11:31:29 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:56035/testdb?loggerLevel=OFF)
2024-09-11 11:31:29 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 24486 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:31:29 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:31:29 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:31:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:31:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:31:30 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@da4cf09 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:31:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:31:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:31:30 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:31:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:31:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:31:30 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:31:30 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:31:30 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 137 ms. Found 1 JPA repository interface.
2024-09-11 11:31:31 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:31:31 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:31:31 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:31:31 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:31:31 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:31:31 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:31:31 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:31:31 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:31:31 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1491 ms
2024-09-11 11:31:31 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:31:31 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:31:31 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:31:32 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:31:32 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:31:32 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b5f72fa
2024-09-11 11:31:32 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:31:33 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:31:33 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint not null, claim_total_paid bigint not null, claim_total_requested bigint not null, market varchar(255), sub_market integer not null, primary key (claim_id))
2024-09-11 11:31:33 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:31:33 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:31:33 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:31:34 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:31:34 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:31:34 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:31:34 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 56049 (http) with context path ''
2024-09-11 11:31:34 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 8.434 seconds (process running for 9.641)
2024-09-11 11:31:35 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:31:35 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:31:35 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 11:31:35 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=0, claimName=, market=, subMarket=0, claimNumber=, claimTotalRequested=0, claimTotalPaid=0, claimTotalInitial=0) to Save.
2024-09-11 11:31:35 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:31:35 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:31:35 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:31:36 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:31:36 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:31:37 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:31:37 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:31:37 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:32:04 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:32:04 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:32:04 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:32:04 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:32:04 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:32:04 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: 1deeecdc4bcc61cb7389c6964ca6eb23b0572b9cec080d96a09075d474274489
2024-09-11 11:32:05 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.842256S
2024-09-11 11:32:05 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:32:05 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:32:05 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:32:05 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:32:05 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 62ec3b9490f929df9017ce2c67e04b7ca4e862bec4199feeec7d47e9b772d4d7
2024-09-11 11:32:06 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT1.841653S
2024-09-11 11:32:06 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:56081/testdb?loggerLevel=OFF)
2024-09-11 11:32:06 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 29824 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:32:06 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:32:06 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:32:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:32:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:32:07 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@da4cf09 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:32:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:32:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:32:07 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:32:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:32:07 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:32:07 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:32:07 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:32:08 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 173 ms. Found 1 JPA repository interface.
2024-09-11 11:32:08 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:32:08 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:32:08 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:32:08 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:32:08 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:32:08 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:32:08 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:32:08 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:32:08 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1564 ms
2024-09-11 11:32:08 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:32:08 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:32:09 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:32:09 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:32:09 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:32:09 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58f27c37
2024-09-11 11:32:09 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:32:10 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:32:10 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint not null, claim_total_paid bigint not null, claim_total_requested bigint not null, market varchar(255), sub_market integer not null, primary key (claim_id))
2024-09-11 11:32:10 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:32:10 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:32:10 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:32:11 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:32:11 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:32:11 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:32:11 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 56095 (http) with context path ''
2024-09-11 11:32:11 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 8.454 seconds (process running for 9.561)
2024-09-11 11:32:12 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:32:12 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:32:12 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 11:32:12 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=0, claimName=, market=, subMarket=0, claimNumber=, claimTotalRequested=0, claimTotalPaid=0, claimTotalInitial=0) to Save.
2024-09-11 11:32:13 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:32:13 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:32:13 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:32:13 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:32:13 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:32:14 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:32:14 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:32:14 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:34:36 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:34:36 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:34:36 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:34:36 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:34:37 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:34:37 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: 570bb0f2c498a25c74c21594a4f7c7924bc2e10f590be212985b0f28ff1499ea
2024-09-11 11:34:38 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT1.414405S
2024-09-11 11:34:38 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:34:38 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:34:38 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:34:38 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:34:38 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 6aa8be43b75b3f3165acd5f8fc68483a0c870cb1992e5a63ccab019c092c083d
2024-09-11 11:34:40 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT2.052376S
2024-09-11 11:34:40 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:56919/testdb?loggerLevel=OFF)
2024-09-11 11:34:40 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 35044 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:34:40 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:34:40 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:34:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:34:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:34:40 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1980a3f uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:34:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:34:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:34:40 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:34:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:34:40 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:34:40 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@47829d6d uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:34:41 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:34:41 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 208 ms. Found 1 JPA repository interface.
2024-09-11 11:34:42 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:34:42 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:34:42 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:34:42 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:34:42 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:34:42 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:34:42 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:34:42 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:34:42 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2191 ms
2024-09-11 11:34:42 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:34:43 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:34:43 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:34:43 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:34:43 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:34:43 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58f27c37
2024-09-11 11:34:43 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:34:44 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:34:44 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint not null, claim_total_paid bigint not null, claim_total_requested bigint not null, market varchar(255), sub_market integer not null, primary key (claim_id))
2024-09-11 11:34:44 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:34:44 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:34:45 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:34:46 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:34:46 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:34:46 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:34:46 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 56931 (http) with context path ''
2024-09-11 11:34:46 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 12.009 seconds (process running for 13.801)
2024-09-11 11:34:49 INFO  [http-nio-auto-1-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:34:49 INFO  [http-nio-auto-1-exec-2] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:34:49 INFO  [http-nio-auto-1-exec-2] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 11:34:49 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=0, claimName=, market=, subMarket=0, claimNumber=, claimTotalRequested=0, claimTotalPaid=0, claimTotalInitial=0) to Save.
2024-09-11 11:34:49 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:34:49 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:34:49 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:34:49 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:34:49 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:34:49 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:34:49 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:34:49 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:36:14 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:36:15 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:36:15 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:36:15 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:36:15 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:36:15 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: 7349a5cff45d19fe0c8a5252985d194b8de08fa529a87791763486f8555ae126
2024-09-11 11:36:15 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.809144S
2024-09-11 11:36:15 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:36:15 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:36:15 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:36:15 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:36:16 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 73440812b19cc3f267238dc461fe0c2a08b0458834b0fe11329316cc126063b2
2024-09-11 11:36:17 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT1.727895S
2024-09-11 11:36:17 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:56993/testdb?loggerLevel=OFF)
2024-09-11 11:36:17 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 43969 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:36:17 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:36:17 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:36:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:36:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:36:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@da4cf09 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:36:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:36:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:36:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:36:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:36:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:36:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@1775c4e7 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:36:18 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:36:18 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 128 ms. Found 1 JPA repository interface.
2024-09-11 11:36:18 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:36:18 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:36:18 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:36:19 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:36:19 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:36:19 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:36:19 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:36:19 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:36:19 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1539 ms
2024-09-11 11:36:19 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:36:19 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:36:19 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:36:19 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:36:19 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:36:20 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58f27c37
2024-09-11 11:36:20 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:36:21 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:36:21 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint not null, claim_total_paid bigint not null, claim_total_requested bigint not null, market varchar(255), sub_market integer not null, primary key (claim_id))
2024-09-11 11:36:21 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:36:21 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:36:21 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:36:22 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:36:22 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:36:22 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:36:22 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 57006 (http) with context path ''
2024-09-11 11:36:22 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 9.255 seconds (process running for 10.877)
2024-09-11 11:37:05 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45s513ms).
2024-09-11 11:37:06 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:37:06 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:37:06 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-09-11 11:37:07 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=0, claimName=, market=, subMarket=0, claimNumber=, claimTotalRequested=0, claimTotalPaid=0, claimTotalInitial=0) to Save.
2024-09-11 11:37:07 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:37:07 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:37:07 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:37:10 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:37:10 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:37:12 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:37:12 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:37:12 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:37:28 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:37:28 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:37:28 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:37:28 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:37:28 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:37:28 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: f0812b89b381330d8d2b02fc64c3f6459a1c714345ec862a9a0e4826d59f09d5
2024-09-11 11:37:29 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.833146S
2024-09-11 11:37:29 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:37:29 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:37:29 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:37:29 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:37:29 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: aebdb750a2d9b907b8b1e0e57fecb25368dbd1d4d4d1b878fe4f0b1a7f66fc8a
2024-09-11 11:37:30 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT1.565232S
2024-09-11 11:37:30 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:57049/testdb?loggerLevel=OFF)
2024-09-11 11:37:30 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 51076 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:37:30 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:37:30 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:37:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:37:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:37:30 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3e214105 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:37:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:37:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:37:30 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@b5c6a30 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:37:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:37:30 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:37:30 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:37:31 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:37:31 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 1 JPA repository interface.
2024-09-11 11:37:31 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:37:32 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:37:32 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:37:32 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:37:32 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:37:32 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:37:32 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:37:32 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:37:32 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1474 ms
2024-09-11 11:37:32 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:37:32 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:37:32 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:37:32 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:37:32 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:37:33 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1dbe592f
2024-09-11 11:37:33 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:37:33 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:37:33 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint not null, claim_total_paid bigint not null, claim_total_requested bigint not null, market varchar(255), sub_market integer not null, primary key (claim_id))
2024-09-11 11:37:33 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:37:33 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:37:34 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:37:34 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:37:34 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:37:34 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:37:34 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 57062 (http) with context path ''
2024-09-11 11:37:34 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 8.121 seconds (process running for 9.472)
2024-09-11 11:37:36 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:37:36 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:37:36 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-09-11 11:37:36 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=1, claimName=insurance, market=BR, subMarket=0, claimNumber=CLM001, claimTotalRequested=200, claimTotalPaid=200, claimTotalInitial=100) to Save.
2024-09-11 11:37:36 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:37:36 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:37:36 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:37:36 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:37:36 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:37:38 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:37:38 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:37:38 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:38:28 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:38:29 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:38:29 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:38:29 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:38:29 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:38:29 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: 8680d69d7079322311f05c83ca4bd7fb843d00de85a63668ee6279e61ce2a016
2024-09-11 11:38:30 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.843697S
2024-09-11 11:38:30 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:38:30 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:38:30 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:38:30 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:38:30 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 5aa80804f9aee113ac265fdcd2bb0f5477bee6cebd52c3b83b0cd5e6a36585e8
2024-09-11 11:38:32 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT2.310164S
2024-09-11 11:38:32 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:57100/testdb?loggerLevel=OFF)
2024-09-11 11:38:32 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 52617 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:38:32 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:38:32 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:38:32 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:38:32 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:38:32 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3e214105 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:38:32 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:38:32 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:38:32 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@b5c6a30 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:38:32 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:38:32 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:38:32 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3bfae028 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:38:33 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:38:33 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 181 ms. Found 1 JPA repository interface.
2024-09-11 11:38:33 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:38:34 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:38:34 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:38:34 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:38:34 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:38:34 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:38:34 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:38:34 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:38:34 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1677 ms
2024-09-11 11:38:34 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:38:34 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:38:34 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:38:34 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:38:34 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:38:35 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7a174e4b
2024-09-11 11:38:35 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:38:35 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:38:35 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint, claim_total_paid bigint, claim_total_requested bigint, market varchar(255), sub_market integer, primary key (claim_id))
2024-09-11 11:38:35 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:38:35 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:38:36 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:38:36 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:38:36 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:38:37 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:38:37 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 57114 (http) with context path ''
2024-09-11 11:38:37 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 10.256 seconds (process running for 11.746)
2024-09-11 11:38:39 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:38:39 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:38:39 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-09-11 11:38:39 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=1, claimName=insurance, market=BR, subMarket=0, claimNumber=CLM001, claimTotalRequested=200, claimTotalPaid=200, claimTotalInitial=100) to Save.
2024-09-11 11:38:39 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:38:39 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:38:39 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:38:40 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:38:40 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:38:40 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:38:40 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:38:40 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-11 11:40:14 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-09-11 11:40:15 INFO  [Test worker] o.t.d.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-09-11 11:40:15 INFO  [Test worker] o.testcontainers.DockerClientFactory - Docker host IP address is localhost
2024-09-11 11:40:15 INFO  [Test worker] o.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 27.1.1
  API Version: 1.46
  Operating System: Docker Desktop
  Total Memory: 7937 MB
2024-09-11 11:40:15 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
2024-09-11 11:40:15 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: ddd69c1cb3ef4a70906a8b4745eb9f49e5e1520a36e9cf94c154f118e94cb9b4
2024-09-11 11:40:15 INFO  [Test worker] tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.789442S
2024-09-11 11:40:15 INFO  [Test worker] o.t.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-09-11 11:40:15 INFO  [Test worker] o.testcontainers.DockerClientFactory - Checking the system...
2024-09-11 11:40:15 INFO  [Test worker] o.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
2024-09-11 11:40:15 INFO  [Test worker] tc.postgres:latest - Creating container for image: postgres:latest
2024-09-11 11:40:15 INFO  [Test worker] tc.postgres:latest - Container postgres:latest is starting: 9a060acf92e2d06f7ea8c97fcc6a15e92840bc2c60c44baabced78aff53b51b7
2024-09-11 11:40:17 INFO  [Test worker] tc.postgres:latest - Container postgres:latest started in PT1.687971S
2024-09-11 11:40:17 INFO  [Test worker] tc.postgres:latest - Container is started (JDBC URL: jdbc:postgresql://localhost:57155/testdb?loggerLevel=OFF)
2024-09-11 11:40:17 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Starting ClaimControllerIT using Java 17.0.4 with PID 52885 (started by sreekanthgaddoju in /Users/sreekanthgaddoju/LearningProjects/kotlin-micro-services/claim-service)
2024-09-11 11:40:17 DEBUG [Test worker] c.s.c.controller.ClaimControllerIT - Running with Spring Boot v3.2.8, Spring v6.1.11
2024-09-11 11:40:17 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - The following 1 profile is active: "test"
2024-09-11 11:40:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:40:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:40:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@3e33b52e uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:40:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:40:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused. Will be trying the next url if available
2024-09-11 11:40:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@39941489 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'test']): I/O error on GET request for "http://localhost:8888/claim-service/test": Connection refused
2024-09-11 11:40:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2024-09-11 11:40:17 INFO  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Exception on Url - http://localhost:8888:org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused. Will be trying the next url if available
2024-09-11 11:40:17 WARN  [Test worker] o.s.c.c.c.ConfigServerConfigDataLoader - Could not locate PropertySource ([ConfigServerConfigDataResource@6f5d0190 uris = array<String>['http://localhost:8888'], optional = true, profiles = 'default']): I/O error on GET request for "http://localhost:8888/claim-service/default": Connection refused
2024-09-11 11:40:18 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-11 11:40:18 INFO  [Test worker] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 176 ms. Found 1 JPA repository interface.
2024-09-11 11:40:19 INFO  [Test worker] o.s.cloud.context.scope.GenericScope - BeanFactory id=12dc4afd-4935-310e-ace1-58bc4add488b
2024-09-11 11:40:19 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-09-11 11:40:19 WARN  [Test worker] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-09-11 11:40:19 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
2024-09-11 11:40:19 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:40:19 INFO  [Test worker] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-11 11:40:19 INFO  [Test worker] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-09-11 11:40:19 INFO  [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-11 11:40:19 INFO  [Test worker] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1809 ms
2024-09-11 11:40:19 INFO  [Test worker] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-11 11:40:19 INFO  [Test worker] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.9.Final
2024-09-11 11:40:19 INFO  [Test worker] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-11 11:40:20 INFO  [Test worker] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-11 11:40:20 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-11 11:40:20 INFO  [Test worker] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2ce7d43
2024-09-11 11:40:20 INFO  [Test worker] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-11 11:40:21 INFO  [Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-11 11:40:21 DEBUG [Test worker] org.hibernate.SQL - create table claims (claim_id bigint not null, claim_name varchar(255), claim_number varchar(255), claim_total_initial bigint, claim_total_paid bigint, claim_total_requested bigint, market varchar(255), sub_market integer, primary key (claim_id))
2024-09-11 11:40:21 DEBUG [Test worker] org.hibernate.SQL - create sequence claims_seq start with 1 increment by 50
2024-09-11 11:40:21 INFO  [Test worker] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:40:21 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-11 11:40:22 INFO  [Test worker] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2024-09-11 11:40:22 WARN  [Test worker] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-09-11 11:40:22 INFO  [Test worker] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-09-11 11:40:22 INFO  [Test worker] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 57168 (http) with context path ''
2024-09-11 11:40:22 INFO  [Test worker] c.s.c.controller.ClaimControllerIT - Started ClaimControllerIT in 8.922 seconds (process running for 10.304)
2024-09-11 11:40:23 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-11 11:40:23 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-11 11:40:23 INFO  [http-nio-auto-1-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-09-11 11:40:23 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Request:ClaimDto(claimId=1, claimName=insurance, market=BR, subMarket=0, claimNumber=CLM001, claimTotalRequested=200, claimTotalPaid=200, claimTotalInitial=100) to Save.
2024-09-11 11:40:23 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:40:23 DEBUG [http-nio-auto-1-exec-1] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:40:23 INFO  [http-nio-auto-1-exec-1] c.sree.claims.service.ClaimService - Saved Claim Response, claimId : 1
2024-09-11 11:40:24 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:40:24 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:40:24 DEBUG [Test worker] org.hibernate.SQL - select nextval('claims_seq')
2024-09-11 11:40:24 DEBUG [Test worker] org.hibernate.SQL - insert into claims (claim_name,claim_number,claim_total_initial,claim_total_paid,claim_total_requested,market,sub_market,claim_id) values (?,?,?,?,?,?,?,?)
2024-09-11 11:40:24 DEBUG [http-nio-auto-1-exec-2] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0 where c1_0.claim_id=?
2024-09-11 11:40:24 INFO  [http-nio-auto-1-exec-2] c.sree.claims.service.ClaimService - Claim Response : com.sree.claims.entity.Claim@7279333f by ID : 2
2024-09-11 11:40:24 DEBUG [Test worker] org.hibernate.SQL - select c1_0.claim_id,c1_0.claim_name,c1_0.claim_number,c1_0.claim_total_initial,c1_0.claim_total_paid,c1_0.claim_total_requested,c1_0.market,c1_0.sub_market from claims c1_0
2024-09-11 11:40:24 DEBUG [Test worker] org.hibernate.SQL - delete from claims where claim_id=?
2024-09-11 11:40:24 INFO  [SpringApplicationShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-11 11:40:24 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-11 11:40:24 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
